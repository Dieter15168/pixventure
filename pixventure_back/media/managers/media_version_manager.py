# media/managers/media_version_manager.py
import logging
from media.models import MediaItem, MediaItemVersion
from media.services import media_version_creator, watermark

logger = logging.getLogger(__name__)

class MediaVersionManager:
    """
    Manager class to orchestrate the asynchronous creation of additional
    media item versions. Versions include:
      - Watermarked preview
      - Full watermarked version
      - Blurred thumbnail
      - Blurred preview
    """
    
    def __init__(self, media_item_id: int):
        self.media_item_id = media_item_id
        try:
            self.media_item = MediaItem.objects.get(id=media_item_id)
        except MediaItem.DoesNotExist:
            raise ValueError(f"MediaItem with ID {media_item_id} does not exist.")

    def process_versions(self):
        """
        Process and generate all additional versions for the given media item.
        Each version is generated by invoking dedicated service functions.
        """
        # Generate watermarked preview version
        try:
            preview_file = watermark.create_watermarked_preview(self.media_item)
            media_version_creator.create_media_item_version(
                media_item=self.media_item,
                file_obj=preview_file,
                version_type=MediaItemVersion.PREVIEW,
                is_image=True
            )
        except Exception as e:
            logger.error("Error generating watermarked preview: %s", e)

        # Generate full watermarked version (for paid users)
        try:
            full_watermarked_file = watermark.create_full_watermarked_version(self.media_item)
            media_version_creator.create_media_item_version(
                media_item=self.media_item,
                file_obj=full_watermarked_file,
                version_type=MediaItemVersion.WATERMARKED,
                is_image=True
            )
        except Exception as e:
            logger.error("Error generating full watermarked version: %s", e)

        # Generate blurred thumbnail version
        try:
            # Retrieve existing thumbnail version (assumed to exist)
            thumbnail_version = self.media_item.versions.get(version_type=MediaItemVersion.THUMBNAIL)
            blurred_thumbnail = watermark.create_blurred_thumbnail(thumbnail_version.file)
            media_version_creator.create_media_item_version(
                media_item=self.media_item,
                file_obj=blurred_thumbnail,
                version_type=MediaItemVersion.BLURRED_THUMBNAIL,
                is_image=True
            )
        except Exception as e:
            logger.error("Error generating blurred thumbnail: %s", e)

        # Generate blurred preview version
        try:
            blurred_preview = watermark.create_blurred_preview(self.media_item)
            media_version_creator.create_media_item_version(
                media_item=self.media_item,
                file_obj=blurred_preview,
                version_type=MediaItemVersion.BLURRED_PREVIEW,
                is_image=True
            )
        except Exception as e:
            logger.error("Error generating blurred preview: %s", e)
